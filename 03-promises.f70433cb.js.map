{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqBA,IAAMC,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,GAAQN,EAAOE,cAAc,sBAAsBK,MACnDC,GAAUR,EAAOE,cAAc,wBAAwBK,MACzDE,GAAST,EAAOE,cAAc,uBAAuBK,MAErDG,EAAU,EACVC,EAAaF,EAEjBG,YAAW,WACT,IAAIC,EAAa,KAEjBA,EAAaC,aAAY,WAEvB,IADAJ,GAAW,KACKF,EAAS,EAGvB,OAFAO,cAAcF,QACdH,EAAU,IAvClB,SAAuBM,EAAUP,GAE/B,OADsBQ,KAAKC,SAAW,GAG7BC,QAAQC,QAAQ,CAAEJ,WAAUP,UAG5BU,QAAQE,OAAO,CAAEL,WAAUP,S,EAoChCa,CAAcZ,EAASJ,GACpBiB,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAeQ,EAALf,MACjBgB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAiBY,OAAXjB,EAAW,OAErDA,GAAcL,C,IAEfuB,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAeQ,EAALf,MAClBgB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAfZ,EAAS,QAAiBY,OAAXjB,EAAW,OAElDA,GAAcL,C,MAEjBA,E,GACFG,E","sources":["src/js/03-promise.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    return Promise.resolve({ position, delay });\n  } else {\n    // Reject\n    return Promise.reject({ position, delay });\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const step = +formEl.querySelector('input[name=\"step\"]').value;\n  const amount = +formEl.querySelector('input[name=\"amount\"]').value;\n  let delay = +formEl.querySelector('input[name=\"delay\"]').value;\n\n  let counter = 0;\n  let totalDelay = delay;\n\n  setTimeout(() => {\n    let intervalId = null;\n\n    intervalId = setInterval(() => {\n      counter += 1;\n      if (counter === amount + 1) {\n        clearInterval(intervalId);\n        counter = 0;\n        return;\n      }\n\n      createPromise(counter, step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${totalDelay}ms`\n          );\n          totalDelay += step;\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${totalDelay}ms`\n          );\n          totalDelay += step;\n        });\n    }, step);\n  }, delay);\n}\n"],"names":["$ejkSG","parcelRequire","$6b6c8d7ec641984c$var$formEl","document","querySelector","addEventListener","e","preventDefault","step","value","amount","delay","counter","totalDelay","setTimeout","intervalId","setInterval","clearInterval","position","Math","random","Promise","resolve","reject","$6b6c8d7ec641984c$var$createPromise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f70433cb.js.map"}